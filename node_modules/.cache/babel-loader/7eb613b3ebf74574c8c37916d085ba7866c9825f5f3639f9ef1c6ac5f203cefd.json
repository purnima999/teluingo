{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORKSPACE\\\\feb\\\\teluingo\\\\src\\\\pages\\\\lessons\\\\lesson1\\\\letterShape.js\";\nimport React from 'react';\nimport \"../../../css/lesson1.css\";\nimport \"../../../css/custom.css\";\nimport Draw from './draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LetterShape = () => {\n  var _letterValue$innerHTM, _alphabetsList$0$labe, _alphabetsList$0$valu, _alphabetsList$0$valu2;\n  let alphabetsList = [{\n    label: \"a\",\n    value: `అ`\n  }, {\n    label: \"aa\",\n    value: \"ఆ\"\n  }, {\n    label: \"i\",\n    value: \"ఇ\"\n  }, {\n    label: \"ee\",\n    value: \"ఈ\"\n  }, {\n    label: \"u\",\n    value: \"ఉ\"\n  }, {\n    label: \"oo\",\n    value: \"ఊ\"\n  }, {\n    label: \"ru\",\n    value: \"ఋ\"\n  }, {\n    label: \"e\",\n    value: \"ఎ\"\n  }, {\n    label: \"ai\",\n    value: \"ఏ\"\n  }, {\n    label: \"o\",\n    value: \"ఒ\"\n  }, {\n    label: \"au\",\n    value: \"ఔ\"\n  }, {\n    label: \"ka\",\n    value: \"క\"\n  }, {\n    label: \"kha\",\n    value: \"ఖ\"\n  }, {\n    label: \"ga\",\n    value: \"గ\"\n  }, {\n    label: \"gha\",\n    value: \"ఘ\"\n  }, {\n    label: \"nga\",\n    value: \"ఙ\"\n  }, {\n    label: \"cha\",\n    value: \"చ\"\n  }, {\n    label: \"chha\",\n    value: \"ఛ\"\n  }, {\n    label: \"ja\",\n    value: \"జ\"\n  }, {\n    label: \"jha\",\n    value: \"ఝ\"\n  }, {\n    label: \"nya\",\n    value: \"ఞ\"\n  }, {\n    label: \"ta\",\n    value: \"ట\"\n  }, {\n    label: \"tha\",\n    value: \"ఠ\"\n  }, {\n    label: \"da\",\n    value: \"డ\"\n  }, {\n    label: \"dha\",\n    value: \"ఢ\"\n  }, {\n    label: \"na\",\n    value: \"ణ\"\n  }, {\n    label: \"pa\",\n    value: \"ప\"\n  }, {\n    label: \"pha\",\n    value: \"ఫ\"\n  }, {\n    label: \"ba\",\n    value: \"బ\"\n  }, {\n    label: \"bha\",\n    value: \"భ\"\n  }, {\n    label: \"ma\",\n    value: \"మ\"\n  }, {\n    label: \"ya\",\n    value: \"య\"\n  }, {\n    label: \"ra\",\n    value: \"ర\"\n  }, {\n    label: \"la\",\n    value: \"ల\"\n  }, {\n    label: \"va\",\n    value: \"వ\"\n  }, {\n    label: \"sha\",\n    value: \"శ\"\n  }, {\n    label: \"shha\",\n    value: \"ష\"\n  }, {\n    label: \"sa\",\n    value: \"స\"\n  }, {\n    label: \"ha\",\n    value: \"హ\"\n  }, {\n    label: \"ksha\",\n    value: \"క్ష\"\n  }, {\n    label: \"tra\",\n    value: \"త్ర\"\n  }];\n  let letterLabel = document.querySelector(\".letter-label\");\n  let letterA = document.querySelector(\".letter-a\");\n  let letterValue = document.querySelector(\".letter-val\");\n  const nextPrevLetter = btnType => {\n    let currentLetterIndex = alphabetsList === null || alphabetsList === void 0 ? void 0 : alphabetsList.findIndex(letter => letter.value === letterA.innerHTML);\n    if (btnType == \"next\") {\n      currentLetterIndex++;\n      if (currentLetterIndex < alphabetsList.length) letterLabel.innerHTML = alphabetsList[currentLetterIndex].label + \"=\";\n      letterValue.innerHTML = alphabetsList[currentLetterIndex].value;\n      letterA.innerHTML = alphabetsList[currentLetterIndex].value;\n    } else {\n      currentLetterIndex--;\n      if (currentLetterIndex >= 0) letterLabel.innerHTML = alphabetsList[currentLetterIndex].label + \"=\";\n      letterValue.innerHTML = alphabetsList[currentLetterIndex].value;\n      letterA.innerHTML = alphabetsList[currentLetterIndex].value;\n    }\n  };\n  let textInputField = (_letterValue$innerHTM = letterValue === null || letterValue === void 0 ? void 0 : letterValue.innerHTML) !== null && _letterValue$innerHTM !== void 0 ? _letterValue$innerHTM : \"\";\n  let utterThis = new SpeechSynthesisUtterance();\n  let synth = window.speechSynthesis;\n  let ourText = \"\";\n  const handleSubmit = e => {\n    e.preventDefault();\n    ourText = textInputField;\n    utterThis.text = ourText;\n    synth.speak(utterThis);\n    textInputField = \"\";\n  };\n  function sample(arr, req) {\n    arr = arr.sort(() => {\n      return 0.5 - Math.random();\n    });\n    let i = 0,\n      array = [];\n    while (i < req) {\n      array.push(arr[i]);\n      ++i;\n    }\n    return array;\n  }\n  let arr = [1, 2, 3, 4, 5];\n  console.log(sample(arr, 2));\n  console.log('speechSynthesis' in window ? console.log(\"Web Speech API supported!\") : console.log(\"Web Speech API not supported :-(\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's understand how to write Telugu Alphabets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"lesson-end-btn\",\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letters-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-label\",\n          children: [(_alphabetsList$0$labe = alphabetsList[0].label) !== null && _alphabetsList$0$labe !== void 0 ? _alphabetsList$0$labe : \"\", \"=\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-val\",\n          children: (_alphabetsList$0$valu = alphabetsList[0].value) !== null && _alphabetsList$0$valu !== void 0 ? _alphabetsList$0$valu : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-a\",\n          children: (_alphabetsList$0$valu2 = alphabetsList[0].value) !== null && _alphabetsList$0$valu2 !== void 0 ? _alphabetsList$0$valu2 : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-drawing-canva\",\n          children: /*#__PURE__*/_jsxDEV(Draw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn\",\n        id: \"prev-letter-btn\",\n        onClick: () => nextPrevLetter(\"prev\"),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn\",\n        id: \"next-letter-btn\",\n        onClick: () => nextPrevLetter(\"next\"),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-btn\",\n        id: \"prev-letter-btn\",\n        onClick: e => handleSubmit(e),\n        children: \"speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = LetterShape;\nexport default LetterShape;\nvar _c;\n$RefreshReg$(_c, \"LetterShape\");","map":{"version":3,"names":["React","Draw","LetterShape","alphabetsList","label","value","letterLabel","document","querySelector","letterA","letterValue","nextPrevLetter","btnType","currentLetterIndex","findIndex","letter","innerHTML","length","textInputField","utterThis","SpeechSynthesisUtterance","synth","window","speechSynthesis","ourText","handleSubmit","e","preventDefault","text","speak","sample","arr","req","sort","Math","random","i","array","push","console","log"],"sources":["D:/MY_WORKSPACE/feb/teluingo/src/pages/lessons/lesson1/letterShape.js"],"sourcesContent":["import React from 'react';\r\nimport \"../../../css/lesson1.css\";\r\nimport \"../../../css/custom.css\";\r\nimport Draw from './draw';\r\n\r\nconst LetterShape = () => {\r\n\r\n    let alphabetsList = [\r\n        { label: \"a\", value: `అ` },\r\n        { label: \"aa\", value: \"ఆ\" },\r\n        { label: \"i\", value: \"ఇ\" },\r\n        { label: \"ee\", value: \"ఈ\" },\r\n        { label: \"u\", value: \"ఉ\" },\r\n        { label: \"oo\", value: \"ఊ\" },\r\n        { label: \"ru\", value: \"ఋ\" },\r\n        { label: \"e\", value: \"ఎ\" },\r\n        { label: \"ai\", value: \"ఏ\" },\r\n        { label: \"o\", value: \"ఒ\" },\r\n        { label: \"au\", value: \"ఔ\" },\r\n        { label: \"ka\", value: \"క\" },\r\n        { label: \"kha\", value: \"ఖ\" },\r\n        { label: \"ga\", value: \"గ\" },\r\n        { label: \"gha\", value: \"ఘ\" },\r\n        { label: \"nga\", value: \"ఙ\" },\r\n        { label: \"cha\", value: \"చ\" },\r\n        { label: \"chha\", value: \"ఛ\" },\r\n        { label: \"ja\", value: \"జ\" },\r\n        { label: \"jha\", value: \"ఝ\" },\r\n        { label: \"nya\", value: \"ఞ\" },\r\n        { label: \"ta\", value: \"ట\" },\r\n        { label: \"tha\", value: \"ఠ\" },\r\n        { label: \"da\", value: \"డ\" },\r\n        { label: \"dha\", value: \"ఢ\" },\r\n        { label: \"na\", value: \"ణ\" },\r\n        { label: \"pa\", value: \"ప\" },\r\n        { label: \"pha\", value: \"ఫ\" },\r\n        { label: \"ba\", value: \"బ\" },\r\n        { label: \"bha\", value: \"భ\" },\r\n        { label: \"ma\", value: \"మ\" },\r\n        { label: \"ya\", value: \"య\" },\r\n        { label: \"ra\", value: \"ర\" },\r\n        { label: \"la\", value: \"ల\" },\r\n        { label: \"va\", value: \"వ\" },\r\n        { label: \"sha\", value: \"శ\" },\r\n        { label: \"shha\", value: \"ష\" },\r\n        { label: \"sa\", value: \"స\" },\r\n        { label: \"ha\", value: \"హ\" },\r\n        { label: \"ksha\", value: \"క్ష\" },\r\n        { label: \"tra\", value: \"త్ర\" },\r\n    ];\r\n\r\n    let letterLabel = document.querySelector(\".letter-label\");\r\n    let letterA = document.querySelector(\".letter-a\");\r\n    let letterValue = document.querySelector(\".letter-val\");\r\n\r\n    const nextPrevLetter = (btnType) => {\r\n        let currentLetterIndex = alphabetsList?.findIndex((letter) => letter.value === letterA.innerHTML);\r\n\r\n        if (btnType == \"next\") {\r\n            currentLetterIndex++;\r\n            if (currentLetterIndex < alphabetsList.length)\r\n                letterLabel.innerHTML = alphabetsList[currentLetterIndex].label + \"=\";\r\n            letterValue.innerHTML = alphabetsList[currentLetterIndex].value;\r\n            letterA.innerHTML = alphabetsList[currentLetterIndex].value;\r\n\r\n        } else {\r\n            currentLetterIndex--;\r\n            if (currentLetterIndex >= 0)\r\n                letterLabel.innerHTML = alphabetsList[currentLetterIndex].label + \"=\";\r\n            letterValue.innerHTML = alphabetsList[currentLetterIndex].value;\r\n            letterA.innerHTML = alphabetsList[currentLetterIndex].value;\r\n\r\n        }\r\n    }\r\n    let textInputField = letterValue?.innerHTML ?? \"\";\r\n    let utterThis = new SpeechSynthesisUtterance()\r\n    let synth = window.speechSynthesis;\r\n    let ourText = \"\";\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        ourText = textInputField\r\n        utterThis.text = ourText\r\n        synth.speak(utterThis)\r\n        textInputField = \"\"\r\n    }\r\n\r\n    function sample(arr, req) {\r\n        arr = arr.sort(() => { return 0.5 - Math.random() });\r\n        let i = 0,\r\n            array = [];\r\n        while (i < req) {\r\n            array.push(arr[i])\r\n            ++i\r\n        }\r\n        return array\r\n    }\r\n\r\n    let arr = [1, 2, 3, 4, 5];\r\n    console.log(sample(arr, 2));\r\n    console.log('speechSynthesis' in window ? console.log(\"Web Speech API supported!\") : console.log(\"Web Speech API not supported :-(\"))\r\n    return (\r\n        <>\r\n            <div className='letters-header'>\r\n                <h1>Let's understand how to write Telugu Alphabets</h1>\r\n                <button id=\"lesson-end-btn\">Finish</button>\r\n            </div>\r\n            <div className='letters'>\r\n                <div className='letters-display'>\r\n                    <div className='letter-label'>{alphabetsList[0].label ?? \"\"}=</div>\r\n                    <div className='letter-val'>{alphabetsList[0].value ?? \"\"}</div>\r\n                    <div className='letter-a'>{alphabetsList[0].value ?? \"\"}</div>\r\n                    <div className='letter-drawing-canva'>\r\n                        <Draw />\r\n                    </div>\r\n                </div>\r\n                <button className=\"custom-btn\" id=\"prev-letter-btn\" onClick={() => nextPrevLetter(\"prev\")}>Previous</button>\r\n                <button className=\"custom-btn\" id=\"next-letter-btn\" onClick={() => nextPrevLetter(\"next\")}>Next</button>\r\n                <button className=\"custom-btn\" id=\"prev-letter-btn\" onClick={(e) => handleSubmit(e)}>speak</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default LetterShape;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}