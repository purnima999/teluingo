{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORKSPACE\\\\feb\\\\teluingo\\\\src\\\\pages\\\\lessons\\\\lesson1\\\\draw.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Draw = () => {\n  // let canvas, ctx, flag = false,\n  //     prevX = 0,\n  //     currX = 0,\n  //     prevY = 0,\n  //     currY = 0,\n  //     clientX = '',\n  //     clientY = '',\n  //     dot_flag = false,\n  //     x = \"black\",\n  //     y = 5,\n  //     w = 0,\n  //     h = 0;\n\n  // window.onload = function () {\n  //     canvas = document.getElementById(\"canvas\");\n  //     ctx = canvas.getContext(\"2d\");\n  //     w = canvas.width;\n  //     h = canvas.height;\n\n  //     canvas.addEventListener(\"mousemove\", function (e) {\n  //         findxy('move', e, '')\n  //     }, false);\n\n  //     canvas.addEventListener(\"mousedown\", function (e) {\n  //         findxy('down', e, '')\n  //     }, false);\n\n  //     canvas.addEventListener(\"mouseup\", function (e) {\n  //         findxy('up', e, '')\n  //     }, false);\n\n  //     canvas.addEventListener(\"mouseout\", function (e) {\n  //         findxy('out', e, '')\n  //     }, false);\n\n  //     canvas.addEventListener(\"touchmove\", function (e) {\n  //         findxy('move', e, 'touch')\n  //     }, false);\n\n  //     canvas.addEventListener(\"touchstart\", function (e) {\n  //         findxy('down', e, 'touch')\n  //     }, false);\n\n  //     canvas.addEventListener(\"touchend\", function (e) {\n  //         findxy('up', e, 'touch')\n  //     }, false);\n\n  //     console.log(canvas, ctx);\n  // }\n\n  // const findxy = (result, e, source) => {\n  //     if (source) {\n  //         clientX = e.changedTouches[0].clientX;\n  //         clientY = e.changedTouches[0].clientY;\n  //     } else {\n  //         clientX = e.clientX;\n  //         clientY = e.clientY;\n  //     }\n  //     if (result == 'down') {\n  //         prevX = currX;\n  //         prevY = currY;\n  //         currX = clientX - canvas.getBoundingClientRect().left;\n  //         currY = clientY - canvas.getBoundingClientRect().top;\n  //         flag = true\n  //         dot_flag = true;\n  //         if (dot_flag) {\n  //             ctx.beginPath();\n  //             ctx.fillStyle = x;\n  //             ctx.fillRect(currX, currY, 2, 2);\n  //             ctx.closePath();\n  //             dot_flag = false;\n  //         }\n  //     }\n  //     if (result == 'up' || result == \"out\") {\n  //         flag = false;\n  //     }\n  //     if (result == 'move') {\n  //         if (flag) {\n  //             prevX = currX;\n  //             prevY = currY;\n  //             currX = clientX - canvas.getBoundingClientRect().left;\n  //             currY = clientY - canvas.getBoundingClientRect().top;\n  //             draw();\n  //         }\n  //     }\n  // }\n\n  // const draw = () => {\n  //     ctx.beginPath();\n  //     ctx.moveTo(prevX, prevY);\n  //     ctx.lineTo(currX, currY);\n  //     ctx.strokeStyle = x;\n  //     ctx.lineWidth = y;\n  //     ctx.stroke();\n  //     ctx.closePath();\n  // }\n\n  // function erase() {\n  //     let m = alert(\"Want to clear\");\n  //     if (m) {\n  //         ctx.clearRect(0, 0, w, h);\n  //         document.getElementById(\"canvas\").style.display = \"none\";\n  //     }\n  // }\n\n  // const colorPicker = (e) => {\n  //     x = e.target.id;\n  //     if (x == \"col-eraser\") y = 14\n  //     else y = 5;\n  //     console.log(\"98989\", x, y)\n  // }\n\n  var c = createjs,\n    stage,\n    art;\n  var x,\n    y,\n    listener,\n    color,\n    hue = 0;\n  stage = new c.Stage(\"test\");\n  art = stage.addChild(new c.Shape());\n  art.cache(0, 0, 600, 400);\n  stage.on(\"stagemousedown\", startDraw, this);\n  function startDraw(evt) {\n    listener = stage.on(\"stagemousemove\", draw, this);\n    stage.on(\"stagemouseup\", endDraw, this);\n    color = c.Graphics.getHSL(hue += 85, 50, 50);\n    x = evt.stageX - 0.001; // offset so we draw an initial dot\n    y = evt.stageY - 0.001;\n    draw(evt); // draw the initial dot\n  }\n\n  function draw(evt) {\n    art.graphics.ss(20, 1).s(color).mt(x, y).lt(evt.stageX, evt.stageY);\n\n    // the composite operation is the secret sauce.\n    // we'll either draw or erase what the user drew.\n    art.updateCache(erase.checked ? \"destination-out\" : \"source-over\");\n    art.graphics.clear();\n    x = evt.stageX;\n    y = evt.stageY;\n    stage.update();\n  }\n  function endDraw(evt) {\n    stage.off(\"stagemousemove\", listener);\n    evt.remove();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"canvas\",\n          width: \"600\",\n          height: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"draw\",\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), \" draw\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"erase\",\n          id: \"erase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), \" erase\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Draw;\nexport default Draw;\nvar _c;\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["React","Draw","c","createjs","stage","art","x","y","listener","color","hue","Stage","addChild","Shape","cache","on","startDraw","evt","draw","endDraw","Graphics","getHSL","stageX","stageY","graphics","ss","s","mt","lt","updateCache","erase","checked","clear","update","off","remove"],"sources":["D:/MY_WORKSPACE/feb/teluingo/src/pages/lessons/lesson1/draw.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Draw = () => {\r\n\r\n    // let canvas, ctx, flag = false,\r\n    //     prevX = 0,\r\n    //     currX = 0,\r\n    //     prevY = 0,\r\n    //     currY = 0,\r\n    //     clientX = '',\r\n    //     clientY = '',\r\n    //     dot_flag = false,\r\n    //     x = \"black\",\r\n    //     y = 5,\r\n    //     w = 0,\r\n    //     h = 0;\r\n\r\n    // window.onload = function () {\r\n    //     canvas = document.getElementById(\"canvas\");\r\n    //     ctx = canvas.getContext(\"2d\");\r\n    //     w = canvas.width;\r\n    //     h = canvas.height;\r\n\r\n    //     canvas.addEventListener(\"mousemove\", function (e) {\r\n    //         findxy('move', e, '')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"mousedown\", function (e) {\r\n    //         findxy('down', e, '')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"mouseup\", function (e) {\r\n    //         findxy('up', e, '')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"mouseout\", function (e) {\r\n    //         findxy('out', e, '')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"touchmove\", function (e) {\r\n    //         findxy('move', e, 'touch')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"touchstart\", function (e) {\r\n    //         findxy('down', e, 'touch')\r\n    //     }, false);\r\n\r\n    //     canvas.addEventListener(\"touchend\", function (e) {\r\n    //         findxy('up', e, 'touch')\r\n    //     }, false);\r\n\r\n    //     console.log(canvas, ctx);\r\n    // }\r\n\r\n    // const findxy = (result, e, source) => {\r\n    //     if (source) {\r\n    //         clientX = e.changedTouches[0].clientX;\r\n    //         clientY = e.changedTouches[0].clientY;\r\n    //     } else {\r\n    //         clientX = e.clientX;\r\n    //         clientY = e.clientY;\r\n    //     }\r\n    //     if (result == 'down') {\r\n    //         prevX = currX;\r\n    //         prevY = currY;\r\n    //         currX = clientX - canvas.getBoundingClientRect().left;\r\n    //         currY = clientY - canvas.getBoundingClientRect().top;\r\n    //         flag = true\r\n    //         dot_flag = true;\r\n    //         if (dot_flag) {\r\n    //             ctx.beginPath();\r\n    //             ctx.fillStyle = x;\r\n    //             ctx.fillRect(currX, currY, 2, 2);\r\n    //             ctx.closePath();\r\n    //             dot_flag = false;\r\n    //         }\r\n    //     }\r\n    //     if (result == 'up' || result == \"out\") {\r\n    //         flag = false;\r\n    //     }\r\n    //     if (result == 'move') {\r\n    //         if (flag) {\r\n    //             prevX = currX;\r\n    //             prevY = currY;\r\n    //             currX = clientX - canvas.getBoundingClientRect().left;\r\n    //             currY = clientY - canvas.getBoundingClientRect().top;\r\n    //             draw();\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const draw = () => {\r\n    //     ctx.beginPath();\r\n    //     ctx.moveTo(prevX, prevY);\r\n    //     ctx.lineTo(currX, currY);\r\n    //     ctx.strokeStyle = x;\r\n    //     ctx.lineWidth = y;\r\n    //     ctx.stroke();\r\n    //     ctx.closePath();\r\n    // }\r\n\r\n    // function erase() {\r\n    //     let m = alert(\"Want to clear\");\r\n    //     if (m) {\r\n    //         ctx.clearRect(0, 0, w, h);\r\n    //         document.getElementById(\"canvas\").style.display = \"none\";\r\n    //     }\r\n    // }\r\n\r\n    // const colorPicker = (e) => {\r\n    //     x = e.target.id;\r\n    //     if (x == \"col-eraser\") y = 14\r\n    //     else y = 5;\r\n    //     console.log(\"98989\", x, y)\r\n    // }\r\n\r\n\r\n\r\n    var c = createjs, stage, art;\r\n    var x, y, listener, color, hue = 0;\r\n\r\n    stage = new c.Stage(\"test\");\r\n    art = stage.addChild(new c.Shape());\r\n    art.cache(0, 0, 600, 400);\r\n\r\n    stage.on(\"stagemousedown\", startDraw, this);\r\n\r\n    function startDraw(evt) {\r\n        listener = stage.on(\"stagemousemove\", draw, this);\r\n        stage.on(\"stagemouseup\", endDraw, this);\r\n        color = c.Graphics.getHSL(hue += 85, 50, 50);\r\n        x = evt.stageX - 0.001; // offset so we draw an initial dot\r\n        y = evt.stageY - 0.001;\r\n        draw(evt); // draw the initial dot\r\n    }\r\n\r\n    function draw(evt) {\r\n        art.graphics.ss(20, 1).s(color).mt(x, y).lt(evt.stageX, evt.stageY);\r\n\r\n        // the composite operation is the secret sauce.\r\n        // we'll either draw or erase what the user drew.\r\n        art.updateCache(erase.checked ? \"destination-out\" : \"source-over\");\r\n\r\n        art.graphics.clear();\r\n        x = evt.stageX;\r\n        y = evt.stageY;\r\n        stage.update();\r\n    }\r\n\r\n    function endDraw(evt) {\r\n        stage.off(\"stagemousemove\", listener);\r\n        evt.remove();\r\n    }\r\n    return (\r\n        <>\r\n            <div className='canvas-panel'>\r\n                <div >\r\n                    <canvas id=\"canvas\" width=\"600\" height=\"500\"></canvas>\r\n                    <input type=\"radio\" name=\"action\" value=\"draw\" checked /> draw\r\n                    <input type=\"radio\" name=\"action\" value=\"erase\" id=\"erase\" /> erase\r\n                    {/* <div className=\"color-palet\">\r\n                        <div className=\"col-12\">Choose Color</div>\r\n                        <div className=\"col-2\"><div className=\"select-colour\" id=\"green\" onClick={(e) => colorPicker(e)}></div></div>\r\n                        <div className=\"col-2\"><div className=\"select-colour\" id=\"blue\" onclick=\"color(this)\"></div></div>\r\n                        <div className=\"col-2\"><div className=\"select-colour\" id=\"red\" onclick=\"color(this)\"></div></div>\r\n                        <div className=\"col-2\"><div className=\"select-colour\" id=\"black\" onclick=\"color(this)\"></div></div>\r\n                        <div className=\"col-eraser\">Eraser <div className=\"select-colour\" id=\"white-ersr\" onclick=\"color(this)\"></div></div>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            {/* <script src=\"index.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\nexport default Draw;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,IAAI,GAAG,MAAM;EAEflCN,KAAK,GAAG,IAAIF,CAAC,CAACS,KAAK,CAAC,MAAM,CAAC;EAC3BN,GAAG,GAAGD,KAAK,CAACQ,QAAQ,CAAC,IAAIV,CAAC,CAACW,KAAK,EAAE,CAAC;EACnCR,GAAG,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAEzBV,KAAK,CAACW,EAAE,CAAC,gBAAgB,EAAEC,SAAS,EAAE,IAAI,CAAC;EAE3C,SAASA,SAAS,CAACC,GAAG,EAAE;IACpBT,QAAQ,GAAGJ,KAAK,CAACW,EAAE,CAAC,gBAAgB,EAAEG,IAAI,EAAE,IAAI,CAAC;IACjDd,KAAK,CAACW,EAAE,CAAC,cAAc,EAAEI,OAAO,EAAE,IAAI,CAAC;IACvCV,KAAK,GAAGP,CAAC,CAACkB,QAAQ,CAACC,MAAM,CAACX,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5CJ,CAAC,GAAGW,GAAG,CAACK,MAAM,GAAG,KAAK,CAAC,CAAC;IACxBf,CAAC,GAAGU,GAAG,CAACM,MAAM,GAAG,KAAK;IACtBL,IAAI,CAACD,GAAG,CAAC,CAAC,CAAC;EACf;;EAEA,SAASC,IAAI,CAACD,GAAG,EAAE;IACfZ,GAAG,CAACmB,QAAQ,CAACC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAACC,CAAC,CAACjB,KAAK,CAAC,CAACkB,EAAE,CAACrB,CAAC,EAAEC,CAAC,CAAC,CAACqB,EAAE,CAACX,GAAG,CAACK,MAAM,EAAEL,GAAG,CAACM,MAAM,CAAC;;IAEnE;IACA;IACAlB,GAAG,CAACwB,WAAW,CAACC,KAAK,CAACC,OAAO,GAAG,iBAAiB,GAAG,aAAa,CAAC;IAElE1B,GAAG,CAACmB,QAAQ,CAACQ,KAAK,EAAE;IACpB1B,CAAC,GAAGW,GAAG,CAACK,MAAM;IACdf,CAAC,GAAGU,GAAG,CAACM,MAAM;IACdnB,KAAK,CAAC6B,MAAM,EAAE;EAClB;EAEA,SAASd,OAAO,CAACF,GAAG,EAAE;IAClBb,KAAK,CAAC8B,GAAG,CAAC,gBAAgB,EAAE1B,QAAQ,CAAC;IACrCS,GAAG,CAACkB,MAAM,EAAE;EAChB;EACA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,cAAc;MAAA,uBACzB;QAAA,wBACI;UAAQ,EAAE,EAAC,QAAQ;UAAC,KAAK,EAAC,KAAK;UAAC,MAAM,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAU,eACtD;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC,MAAM;UAAC,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,SACzD;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC,OAAO;UAAC,EAAE,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,UAC7D;MAAA;QAAA;QAAA;QAAA;MAAA;IAQE;MAAA;MAAA;MAAA;IAAA;EACJ,iBAEP;AAEX,CAAC;AAAA,KA3KKlC,IAAI;AA4KV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}